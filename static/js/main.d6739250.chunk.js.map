{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behaviour","map","msg","ChatMessage","message","id","ref","onSubmit","type","value","onChange","target","props","messageClass","className","src","App","useAuthState","user","signOut","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAaAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAE3B,SAASC,IAQP,OACE,wBAAQC,QAPe,WACxB,IAAMC,EAAW,IAAIZ,IAASQ,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAKpB,iCAMJ,SAASG,IAGP,IAAMC,EAAQC,mBACRC,EAAcT,EAAUU,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IALnC,EAOCC,YAAkBH,EAAM,CAACI,QAAS,OAA9CC,EAPW,sBASgBC,mBAAS,IATzB,mBASXC,EATW,KASAC,EATA,KAWZC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAElBD,EAAEE,iBAFgB,EAIKxB,EAAKyB,YAArBC,EAJW,EAIXA,IAAIC,EAJO,EAIPA,SAJO,SAMZjB,EAAYkB,IAAI,CACpBC,KAAKV,EACLW,UAAWtC,IAASS,UAAU8B,WAAWC,kBACzCN,MACAC,aAVgB,OAalBP,EAAa,IAEbZ,EAAMyB,QAAQC,eAAe,CAACC,UAAU,WAftB,2CAAH,sDAkBjB,OACE,qCACE,iCACGlB,GAAYA,EAASmB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,qBAAKC,IAAKjC,OAIZ,uBAAMkC,SAAUrB,EAAhB,UACE,uBAAOsB,KAAK,OAAOC,MAAOzB,EAAW0B,SAAU,SAACvB,GAAD,OAAOF,EAAaE,EAAEwB,OAAOF,UAE5E,wBAAQD,KAAK,SAAb,0BAMR,SAASL,EAAYS,GAAQ,IAAD,EACIA,EAAMR,QAA7BV,EADmB,EACnBA,KAAMH,EADa,EACbA,IAAKC,EADQ,EACRA,SAEZqB,EAAetB,IAAQ1B,EAAKyB,YAAYC,IAAM,OAAS,WAC7D,OACE,sBAAKuB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAKvB,IACV,4BAAIE,OA2BKsB,MApBf,WAAgB,IAAD,EAEEC,YAAapD,GAArBqD,EAFM,oBAIb,OACE,sBAAKJ,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACGjD,EAAKyB,aAAe,wBAAQtB,QAAS,kBAAIH,EAAKsD,WAA1B,wBAEvB,kCACGD,EAAM,cAAC9C,EAAD,IAAe,cAACL,EAAD,UCnGfqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d6739250.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\nimport {useState,useRef} from 'react'\nimport './App.css';\n\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBWsPgSEpxehrFny2JaxAKA93ExS1nQVRc\",\n  authDomain: \"superchat-440f9.firebaseapp.com\",\n  projectId: \"superchat-440f9\",\n  storageBucket: \"superchat-440f9.appspot.com\",\n  messagingSenderId: \"974607969055\",\n  appId: \"1:974607969055:web:f280dcaa3d1b821406de2a\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction SignIn() {\n\n  const signInWithGoogle = () =>{\n   const provider = new firebase.auth.GoogleAuthProvider();\n   auth.signInWithPopup(provider);\n    \n  }\n\n  return(\n    <button onClick ={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\n\n\nfunction ChatRoom() {\n\n\n  const dummy = useRef()\n  const messagesRef = firestore.collection('messages')\n  const query = messagesRef.orderBy('createdAt').limit(25)\n\n  const [messages] = useCollectionData(query,{idField: 'id'})\n\n  const [formValue, setFormValue] = useState('')\n  \n  const sendMessage = async(e) => {\n   \n    e.preventDefault()\n\n    const {uid,photoURL} = auth.currentUser\n\n    await messagesRef.add({\n      text:formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n\n    setFormValue('');\n\n    dummy.current.scrollIntoView({behaviour:'smooth'})\n  }\n  \n  return(\n    <>\n      <main>\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n        <div ref={dummy}></div>\n      \n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input type=\"text\" value={formValue} onChange={(e) => setFormValue(e.target.value)}/>\n\n        <button type=\"submit\">submit</button>\n      </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const {text, uid, photoURL} = props.message\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received'\n  return(\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} />\n      <p>{text}</p>\n    </div>\n\n\n  )\n}\n\nfunction App() {\n  \n  const [user] = useAuthState(auth);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {auth.currentUser && <button onClick={()=>auth.signOut()}>Sign Out</button>} \n      </header>\n      <section>\n        {user? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}